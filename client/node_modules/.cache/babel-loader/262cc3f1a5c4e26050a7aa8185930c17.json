{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\src\\\\components\\\\sign-up\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './SignUp.scss';\nimport FormInput from '../form-input/FormInput';\nimport Custombutton from '../custom-button/CustomButton';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    displayName: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Custombutton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Daniel/Desktop/Andrei neagoie react/e-commerce-web-app-chapter 22/client/src/components/sign-up/SignUp.js"],"names":["React","useState","connect","FormInput","Custombutton","signUpStart","SignUp","email","password","confirmPassword","displayName","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","e","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './SignUp.scss';\r\n\r\nimport FormInput from '../form-input/FormInput';\r\nimport Custombutton from '../custom-button/CustomButton';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n\r\n  const [ userCredentials, setUserCredentials ] = useState({ \r\n    email:'',\r\n    password:'',\r\n    confirmPassword:'',\r\n    displayName:''\r\n  });\r\n\r\n  const { displayName, email, password, confirmPassword } = userCredentials;\r\n\r\n  const handleSubmit = async event => {\r\n\r\n    event.preventDefault();\r\n    \r\n\r\n    if(password !== confirmPassword) {\r\n      alert(\"Passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    signUpStart({ displayName, email, password })\r\n\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setUserCredentials({...userCredentials, [name] : value });\r\n  }\r\n\r\n    \r\n    return(\r\n      <div className='sign-up'>\r\n\r\n        <h2 className='title'>I do not have an account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form onSubmit={handleSubmit}>\r\n          <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          onChange={handleChange}\r\n          label='Display Name'\r\n          required\r\n           />\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={handleChange}\r\n            label='Email'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n            label='Password'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={handleChange}\r\n            label='Confirm Password'\r\n            required\r\n          />\r\n\r\n          <Custombutton type='submit'>SIGN UP</Custombutton>\r\n\r\n        </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps) (SignUp);"]},"metadata":{},"sourceType":"module"}
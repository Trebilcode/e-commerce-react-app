{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Andrei neagoie react\\\\e-commerce-web-app-chapter 22\\\\client\\\\src\\\\components\\\\sign-in\\\\SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './SignIn.scss';\nimport FormInput from '../form-input/FormInput';\nimport Custombutton from '../custom-button/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    onChange: handleChange,\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    onChange: handleChange,\n    label: \"password\",\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Custombutton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"SIGN IN\"), React.createElement(Custombutton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"SIGN IN WITH GOOGLE\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Daniel/Desktop/Andrei neagoie react/e-commerce-web-app-chapter 22/client/src/components/sign-in/SignIn.js"],"names":["React","useState","connect","FormInput","Custombutton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setUserCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport './SignIn.scss';\r\nimport FormInput from '../form-input/FormInput';\r\nimport Custombutton from '../custom-button/CustomButton';\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n\r\n  const [ userCredentials, setUserCredentials] = useState({ email: '', password:'' });\r\n\r\n  const { email, password} = userCredentials;\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    emailSignInStart(email, password);   \r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.target;\r\n    \r\n    setUserCredentials({...userCredentials, [name] : value});\r\n  }\r\n  \r\n  return (\r\n\r\n      <div className='sign-in'>\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n        <FormInput\r\n        onChange={handleChange} \r\n        label='email'\r\n        type='email'\r\n        name='email' \r\n        value={email}\r\n        \r\n        required\r\n        />\r\n        \r\n        <FormInput\r\n        onChange={handleChange}\r\n        label='password'\r\n        name='password'\r\n        type='password'\r\n        value={password}\r\n        required\r\n          />\r\n        \r\n        <div className='buttons'>\r\n          <Custombutton\r\n          type='submit'\r\n          \r\n          >\r\n          SIGN IN\r\n          </Custombutton>\r\n          <Custombutton\r\n            type='button'\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn\r\n          >\r\n            SIGN IN WITH GOOGLE\r\n          </Custombutton>\r\n        </div>\r\n        </form>\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps) (SignIn);"]},"metadata":{},"sourceType":"module"}
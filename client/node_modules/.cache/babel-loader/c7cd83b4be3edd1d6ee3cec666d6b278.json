{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { ShopPageActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopPageActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/Daniel/Desktop/Andrei neagoie react/e-commerce-web-app-chapter 22/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopPageActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,mBAAT,QAAoC,cAApC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACK,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACF;AAED,OAAO,UAAUC,qBAAV,GAAmC;AACxC,QAAMjB,UAAU,CAACI,mBAAmB,CAACc,uBAArB,EAA8CT,qBAA9C,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport { ShopPageActionTypes } from './shop.types';\r\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\r\n\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapShot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapShotToMap, snapShot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap))\r\n  } catch (error) {\r\n      yield put(fetchCollectionsFailure(error.message))\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart () {\r\n  yield takeLatest(ShopPageActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}\r\n\r\nexport function* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)])\r\n}"]},"metadata":{},"sourceType":"module"}